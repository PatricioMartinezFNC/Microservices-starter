package com.pdr.starter.cliente.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * CbzCriterioUnoFases generated by BS2
 */
@Entity
@Table(name = "CBZ_CRITERIO_UNO_FASES", schema = "CBZPAR")
public class CbzCriterioUnoFasesModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idCriterioUnoFase;
	private CobFasesModel cobFases;
	private CbzCriterioUnoModel cbzCriterioUno;

	public CbzCriterioUnoFasesModel() {
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "ID_SEQUENCE_CRITERIO_UNO_FASES")
	@SequenceGenerator(name = "ID_SEQUENCE_CRITERIO_UNO_FASES", allocationSize = 1, sequenceName = "SEQ_CBZ_CRITERIO_UNO", schema = "CBZPAR")
	@Column(name = "ID_CRITERIO_UNO_FASE", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getIdCriterioUnoFase() {
		return this.idCriterioUnoFase;
	}

	public void setIdCriterioUnoFase(Long idCriterioUnoFase) {
		this.idCriterioUnoFase = idCriterioUnoFase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "COB_FASES_FASE_COD", referencedColumnName = "FASE_COD", nullable = false),
			@JoinColumn(name = "COB_FASES_EMPR_COD", referencedColumnName = "EMPR_COD", nullable = false) })
	public CobFasesModel getCobFases() {
		return this.cobFases;
	}

	public void setCobFases(CobFasesModel cobFases) {
		this.cobFases = cobFases;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_CU_CRITERIO_UNO", nullable = false)
	public CbzCriterioUnoModel getCbzCriterioUno() {
		return this.cbzCriterioUno;
	}

	public void setCbzCriterioUno(CbzCriterioUnoModel cbzCriterioUno) {
		this.cbzCriterioUno = cbzCriterioUno;
	}

}
